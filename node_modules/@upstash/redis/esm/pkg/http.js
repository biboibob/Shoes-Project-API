import { UpstashError } from "./error.js";
export class HttpClient {
    constructor(config) {
        Object.defineProperty(this, "baseUrl", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "headers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "options", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "retry", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.baseUrl = config.baseUrl.replace(/\/$/, "");
        this.headers = { "Content-Type": "application/json", ...config.headers };
        this.options = { backend: config.options?.backend };
        if (typeof config?.retry === "boolean" && config?.retry === false) {
            this.retry = {
                attempts: 1,
                backoff: () => 0,
            };
        }
        else {
            this.retry = {
                attempts: config?.retry?.retries ?? 5,
                backoff: config?.retry?.backoff ??
                    ((retryCount) => Math.exp(retryCount) * 50),
            };
        }
    }
    async request(req) {
        const requestOptions = {
            method: "POST",
            headers: this.headers,
            body: JSON.stringify(req.body),
            keepalive: true,
            /**
             * Fastly specific
             */
            backend: this.options?.backend,
        };
        let res = null;
        let error = null;
        for (let i = 0; i <= this.retry.attempts; i++) {
            try {
                res = await fetch([this.baseUrl, ...(req.path ?? [])].join("/"), requestOptions);
                break;
            }
            catch (err) {
                error = err;
                await new Promise((r) => setTimeout(r, this.retry.backoff(i)));
            }
        }
        if (!res) {
            throw error ?? new Error("Exhausted all retries");
        }
        const body = (await res.json());
        if (!res.ok) {
            throw new UpstashError(body.error);
        }
        return body;
    }
}
